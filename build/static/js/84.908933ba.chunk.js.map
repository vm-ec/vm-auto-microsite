{"version":3,"file":"static/js/84.908933ba.chunk.js","mappings":"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","sources":["sdk-library/apiGateway.js","sdk-library/validationsService.js","sdk-library/quoteApi.js","sdk-library/utils.js","common/alert/Alert.jsx","common/button/Button.js","common/card/Card.jsx","common/checkBox/CheckBox.js","common/grid/Grid.jsx","common/headings/Heading.js","common/radioButton/RadioButton.js","common/selectInput/SelectInput.js","common/text/Text.js","common/textInput/TextInput.js","common/tableView/ApiNinjas.js","common/tableView/Table.js","common/tableView/APITABS.js","widgets/DynamicWizrd.js","pages/ProductContainer.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base configuration for the Axios instance\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:3007', // Set your base URL here\r\n  timeout: 30000, // Request timeout\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request Interceptor to include authentication tokens or any other headers\r\n// axiosInstance.interceptors.request.use(\r\n//   (config) => {\r\n//     // Add token from localStorage or any other source\r\n//     const token = localStorage.getItem('accessToken');\r\n//     if (token) {\r\n//       config.headers.Authorization = `Bearer ${token}`;\r\n//     }\r\n//     return config;\r\n//   },\r\n//   (error) => {\r\n//     // Handle request error\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\n\r\n// Response Interceptor for handling common response logic, such as error mediation\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    // You can add global response transformation here\r\n    return response.data; // Assuming API responses come in a { data: ... } format\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      // Handle Unauthorized (e.g., token expired or invalid)\r\n      console.error('Unauthorized - redirecting to login');\r\n      // Optionally, redirect to login page\r\n    } else if (error.response && error.response.status === 500) {\r\n      console.error('Server error');\r\n      // Handle server errors\r\n    }\r\n    return Promise.reject(error); // Pass the error to the caller\r\n  }\r\n);\r\n\r\n// Example of generic API request functions (GET, POST, PUT, DELETE)\r\n\r\n// GET Request\r\nexport const getRequest = async (endpoint, params = {}) => {\r\n  try {\r\n    const response = await axiosInstance.get(endpoint, { params });\r\n    return response; // response already transformed by the interceptor\r\n  } catch (error) {\r\n    throw error; // Pass the error for further handling\r\n  }\r\n};\r\n\r\n// POST Request\r\nexport const postRequest = async (endpoint, data = {}) => {\r\n  console.log(\"..dasnhiasdsakdbjgsahkdjgshad\",endpoint,data)\r\n  try {\r\n    const response = await axiosInstance.post(endpoint, data);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// PUT Request\r\nexport const putRequest = async (endpoint, data = {}) => {\r\n  try {\r\n    const response = await axiosInstance.put(endpoint, data);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// DELETE Request\r\nexport const deleteRequest = async (endpoint) => {\r\n  try {\r\n    const response = await axiosInstance.delete(endpoint);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import _ from 'lodash';\r\n\r\nexport const validationRulesMethod = {\r\n    required: (label, value, required, errorMessage) => ({\r\n        valid: required ? !isEmpty(value) : true,\r\n        errorMessage: errorMessage || `${label} is required.`,\r\n    }),\r\n    minLength: (label, value, length, errorMessage) => ({\r\n        valid: value.length >= length,\r\n        errorMessage: errorMessage || `${label} should be at least ${length} characters.`,\r\n    }),\r\n    maxLength: (label, value, length, errorMessage) => ({\r\n        valid: value.length <= length,\r\n        errorMessage: errorMessage || `${label} length should be lessthan ${length} characters.`,\r\n    }),\r\n    regexPattern: (label, value, pattern, errorMessage) => ({\r\n        valid: new RegExp(pattern).test(value),\r\n        errorMessage: errorMessage || `${label} has invalid input data.`,\r\n    }),\r\n    min: (label, value, min, errorMessage) => ({\r\n        valid: value >= min,\r\n        errorMessage: errorMessage || `${label} should be morethan or equal to ${min}.`,\r\n    }),\r\n    max: (label, value, max, errorMessage) => ({\r\n        valid: value <= max,\r\n        errorMessage: errorMessage || `${label} should be lessthan or equal to ${max}.`,\r\n    }),\r\n    minDate: (label, value, minDate, errorMessage) => ({\r\n        valid: new Date(value) >= new Date(minDate),\r\n        errorMessage: errorMessage || `${label} should be morethan or equal to ${minDate}.`,\r\n    }),\r\n    maxDate: (label, value, maxDate, errorMessage) => ({\r\n        valid: new Date(value) <= new Date(maxDate),\r\n        errorMessage: errorMessage || `${label} should be lessthan or equal to ${maxDate}.`,\r\n    }),\r\n    pattern: (label, value, pattern, errorMessage) => ({\r\n        valid: isValidPattern(value, pattern),\r\n        errorMessage: errorMessage || `${label} has invalid input data.`,\r\n    }),\r\n};\r\n\r\nexport const isValidPattern = (value, pattern) => {\r\n    switch (pattern) {\r\n        case 'ALPHABETS_NOSPACE':\r\n            return isAlphabetNoSpace(value);\r\n        case 'ALPHA_NUMERIC_NOSPACE':\r\n            return isAlphabetNumericNoSpace(value)\r\n        case 'ALPHABET_SPACE':\r\n            return isAlphabetSpace(value);\r\n        case 'ALPHA_NUMERIC_SPACE':\r\n            return isAlphabetNumericSpace(value)\r\n        case 'MOBILE_NUMBER':\r\n            return isvalidMobileNumber(value)\r\n        case 'OTP_NUMBER':\r\n            return isvalidOtpNumber(value);\r\n        case 'NUMERIC':\r\n            return isNumeric(value);\r\n        case 'FLOAT':\r\n            return isDecimal(value);\r\n        case 'DATE':\r\n            return isValidDate(value)\r\n        case 'GEO_LOCATION':\r\n            return isValidGeoLocation(value)\r\n        case 'EMAIL':\r\n            return isValidEmail(value);\r\n        case 'URL':\r\n           return isValidUrl(value)\r\n        case 'PASSWORD':\r\n            return isValidPassword(value)\r\n        case 'UUID':\r\n            return isValidUUIDFormat(value)\r\n        case 'SPECIAL_CHARS_DESC':\r\n            return isValidSpecialChars(value)\r\n        case 'DESCRIPTION':\r\n            return isValidDescription(value)\r\n        case 'ZIP_CODE':\r\n            return isValidZipCode(value);     \r\n        default:\r\n           return true;\r\n    }\r\n}\r\n\r\nexport const validateFormFields = (fieldsObject) => {\r\n    var responseData = {};\r\n    var validatedFields = [];\r\n    let validationStatus = true;\r\n    for (var field in fieldsObject) {\r\n        var item = fieldsObject[field];\r\n        let validationRules = item.validationRules;\r\n        if (item.validationRules?.required?.value) {\r\n            for (let rule in validationRules) {\r\n                const { valid, errorMessage } = validationRulesMethod[rule](item.label, item.value, validationRules[rule].value, validationRules[rule].errorMessage);\r\n                if (valid) {\r\n                    item.isValid = true;\r\n                } else {\r\n                    item.isValid = false;\r\n                    Object.assign(item, { errorMessage });\r\n                    validationStatus = false;\r\n                    break;\r\n                }\r\n            }\r\n            validatedFields.push(item);\r\n        } else {\r\n            if (!isEmpty(item.value)) {\r\n                for (let rule in validationRules) {\r\n                    const { valid, errorMessage } = validationRulesMethod[rule](item.label, item.value, validationRules[rule].value, validationRules[rule].errorMessage);\r\n                    if (valid) {\r\n                        item.isValid = true;\r\n                    } else {\r\n                        item.isValid = false;\r\n                        Object.assign(item, { errorMessage });\r\n                        validationStatus = false;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                item.isValid = true;\r\n            }\r\n            // validatedFields[field] = item;\r\n            validatedFields.push(item);\r\n        }\r\n    }\r\n    responseData.data = validatedFields;\r\n    responseData.status = validationStatus;\r\n    return responseData;\r\n};\r\n\r\nexport const isAlphabetNoSpace = (value) => {\r\n    var re = /^[a-zA-Z]+$/;\r\n    if (value && re.test(value))\r\n        return true;\r\n    else\r\n        return false;\r\n};\r\nexport const isAlphabetSpace = (value) => {\r\n    var re = /^[a-zA-Z ]+$/;\r\n    if (value && re.test(value))\r\n        return true;\r\n    else\r\n        return false;\r\n};\r\nexport const isAlphabetNumericNoSpace = (value) => {\r\n    var re = /^[a-zA-Z0-9]*$/;\r\n    if (value && re.test(value))\r\n        return true;\r\n    else\r\n        return false;\r\n};\r\nexport const isAlphabetNumericSpace = (value) => {\r\n    var re = /^[a-zA-Z0-9 ]*$/;\r\n    if (value && re.test(value))\r\n        return true;\r\n    else\r\n        return false;\r\n};\r\nexport const isValidUUIDFormat = (value) => {\r\n    var re = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n    if (value && re.test(value))\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nexport const isValidPassword = (value) => {\r\n    var re = /^[a-zA-Z0-9_!@#$%^&*()]*$/;\r\n    if (value && re.test(value))\r\n        return true;\r\n    else\r\n        return false;\r\n};\r\n\r\nexport const isvalidOtpNumber = (value) => {\r\n    var re = /^[0-9]{6}$/;\r\n    if (value && re.test(value))\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\nexport const isvalidMobileNumber = (value) => {\r\n    var re = /^[0-9]{10}$/;\r\n    if (value && re.test(value))\r\n        return true;\r\n    else\r\n        return false;\r\n};\r\n\r\nexport const isNumeric = (value) => {\r\n    var re = /^[0-9]+$/;\r\n    if (value && re.test(value))\r\n        return true;\r\n    else\r\n        return false;\r\n};\r\n\r\nexport const isDecimal = (value) => {\r\n    var re = /^[0-9]+\\.?[0-9]*$/;\r\n    if (value && re.test(value))\r\n        return true;\r\n    else\r\n        return false;\r\n};\r\n\r\nexport const isEmpty = (value) => {\r\n    return _.isEmpty(value);\r\n};\r\n\r\nexport const isValidZipCode = (value) => {    \r\n    var re = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/;\r\n    if (value && re.test(value))\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nexport const isValidDate = (value) => {\r\n    if (!isNaN(new Date(value).getTime()))\r\n        return true;\r\n    else\r\n        return false;\r\n};\r\n\r\nexport const isValidGeoLocation = (value) => {\r\n    if (value && value.location && value.location[0] && value.location[1])\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nexport const isValidEmail = (value) => {\r\n    console.log('va', value);\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (value && re.test(String(value).toLowerCase()))\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nexport const isValidUrl = (value) => {\r\n    const re = /^((http?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/;\r\n    if (value && re.test(String(value).toLowerCase()))\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nexport const isValidDescription = (value) => {\r\n    var textval = value;\r\n    if (value) {\r\n        textval = this.stripTags(value);\r\n    }\r\n    if (textval && textval.trim() !== '')\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nexport const isValidSpecialChars = (value) => {\r\n    var textval = value;\r\n    if (value) {\r\n        textval = this.stripTags(value);\r\n    }\r\n    var re = /^[a-zA-Z0-9,_\\-_.%@!#$&*():;{}~/'\"-+?\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC ]*$/;\r\n    if (textval && re.test(textval) && textval.trim() !== '')\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nexport const stripTags = (html) => {\r\n    var tmp = document.createElement(\"DIV\");\r\n    tmp.innerHTML = html;\r\n    return tmp.textContent || tmp.innerText || \"\";\r\n}\r\n\r\n\r\n\r\nexport const prepareJsonObject = (dataObj) => {\r\n    var jsonArr = {};\r\n    for (var i = 0; i < dataObj.length; i++) {\r\n        jsonArr[dataObj[i].name] = dataObj[i].value;\r\n    }\r\n    return jsonArr;\r\n}\r\n","export const quoteApi = {\r\n    \"id\": 4,\r\n    \"name\": \"Quote\",\r\n    \"endpoint\": \"http://localhost:3007/QuotesMockModel\"\r\n}","import axios from 'axios';\r\nimport {quoteApi} from 'sdk-library';\r\n\r\n\r\nexport const mapFormData = (fieldsArray)=>{\r\n    const dataObj={}\r\n    fieldsArray.forEach(field=>{\r\n        dataObj[field.name]=field.value;\r\n    });\r\n    return dataObj\r\n}\r\nconst transformKey = (key) => {\r\n    return key.replace(/([A-Z])/g, ' $1') // Add space before each capital letter\r\n        .replace(/^./, str => str.toUpperCase()); // Capitalize the first letter\r\n};\r\n\r\nexport const updateQuoteModel = async (result)=>{\r\n    const transformedResult = Object.keys(result).reduce((acc, key) => {\r\n        const newKey = transformKey(key);\r\n        acc[newKey] = result[key];\r\n        return acc;\r\n    }, {});\r\n    transformedResult.component = 'Card';\r\n    try {\r\n     const getResponse = await axios.get(quoteApi.endpoint)\r\n            let currentData = getResponse.data;   \r\n         \r\n             currentData.item.fields=[transformedResult];\r\n\r\n            const patchResponse = await  axios.patch(quoteApi.endpoint,currentData);\r\n        }\r\n\r\n   \r\ncatch(err){\r\n    console.error(\"error\",err)\r\n}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Alert.css';\r\nimport { useEffect } from 'react';\r\n\r\nconst Alert = ({ type, message, onClose }) => {\r\n  useEffect(()=>{\r\n    window.scrollTo(0, 0);\r\n  })\r\n  return (\r\n    <div className={`alert alert-${type}`}>\r\n      <span className=\"alert-message\">{message}</span>\r\n      {onClose && \r\n      <button className=\"alert-close\" onClick={onClose}>\r\n        &times;\r\n      </button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  type: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n  message: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst Button = ({ label, onClick, disabled, color, variant, size, fullWidth, key, shape, className, as, href, type }) => {\r\n\r\n  if (as === 'a') {\r\n    return (\r\n      <a href={href} \r\n      className={`btn btn-${color}${variant ? '-' + variant : ''} ${className}  btn-${size}  ${fullWidth ? 'btn-fullWidth' : ''} ${shape ? shape : ''}`}\r\n      onClick={onClick}>\r\n        {label}\r\n      </a>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className={`btn btn-${color}${variant ? '-' + variant : ''} ${className}  btn-${size}  ${fullWidth ? 'btn-fullWidth' : ''} ${shape ? shape : ''}`}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      key={key}\r\n      type={type}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  color: PropTypes.oneOf(['primary', 'secondary']),\r\n  variant: PropTypes.oneOf([ 'filled', 'outline', 'link']),\r\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n  fullWidth: PropTypes.bool,\r\n  key: PropTypes.string,\r\n  shape: PropTypes.oneOf(['rounded-0','rounded-pill','rounded-5','rounded-10']),\r\n  className: PropTypes.string,\r\n  as: PropTypes.oneOf(['a', 'button']),\r\n  href: PropTypes.string,\r\n  type:  PropTypes.oneOf(['button', 'submit', 'reset'])\r\n};\r\n\r\nButton.defaultProps = {\r\n  onClick: () => { },\r\n  disabled: false,\r\n  color: 'primary',\r\n  variant: 'filled',\r\n  size: 'medium',\r\n  fullWidth: false,\r\n  className: '',\r\n  type: 'button',\r\n  href:'#'\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Card.css'; // Import CSS for styling\r\n\r\n// Card Component\r\nconst Card = ({ field, ...props}, ref) => {\r\n console.log(\"props\", \"hereee\", props )\r\n const data = (props)=>{\r\n  return Object.entries(props).map(([label,value])=>({\r\n    label,value\r\n  }));\r\n }\r\n const quoteData = data(props)\r\n const filteredData = quoteData.filter(item=>item.label !=='className' && item.label !=='component')\r\n  return (\r\n  <div className='quote-container'>\r\n    <div className='quote-card'>\r\n    {filteredData.map((field,index)=>(\r\n          <div className='quote-row'>\r\n            <h5 className='quote-card-label'>{field.label}</h5><p className='quote-card-value'>{field.value}</p></div>\r\n    ))\r\n\r\n    }</div></div>\r\n  )\r\n   \r\n};\r\n\r\n// CardHeader Component\r\nconst CardHeader = ({ children }) => {\r\n  return <div className=\"card-header\">{children}</div>;\r\n};\r\n\r\n// CardBody Component\r\nconst CardBody = ({ children }) => {\r\n  return <div className=\"card-body\">{children}</div>;\r\n};\r\n\r\n// Prop Types\r\nCard.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCardHeader.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nCardBody.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\n// Default Props\r\nCard.defaultProps = {\r\n  className: '',\r\n};\r\n\r\n// Export Components\r\nexport { Card, CardHeader, CardBody };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CheckBox.css';\r\n\r\nconst CheckboxGroup = ({ label, options, selectedValues, onChange, name, className, validationRules }) => {\r\n  \r\n  const handleCheckboxChange = (event) => {\r\n    const value = event.target.value;\r\n    const isChecked = event.target.checked;\r\n    if (isChecked) {\r\n      onChange([...selectedValues, value]);\r\n    } else {\r\n      onChange(selectedValues.filter((selected) => selected !== value));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`checkbox-group ${className}`}>\r\n    <span>{label}\r\n    {validationRules?.required?.value && <span aria-hidden=\"true\" className=\"text-input-required\">*</span>}\r\n    </span><br /><br />\r\n      {options.map((option) => (\r\n        <div key={option.value} className=\"checkbox-item\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id={option.value}\r\n            name={name}\r\n            value={option.value}\r\n            checked={selectedValues.includes(option.value)}\r\n            onChange={handleCheckboxChange}\r\n            className=\"checkbox-input\"\r\n          />\r\n          <label\r\n            htmlFor={option.value}\r\n            className=\"checkbox-label\"\r\n          >\r\n            {option.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckboxGroup.propTypes = {\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      value: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  selectedValues: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCheckboxGroup.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default CheckboxGroup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Grid.css'; // Import CSS for styling\r\n\r\n// Helper function to generate class names based on size props\r\nconst getSizeClasses = ({ xs, sm, md, lg, xl }) => {\r\n  const classes = [];\r\n  if (xs) classes.push(`col-xs-${xs}`);\r\n  if (sm) classes.push(`col-sm-${sm}`);\r\n  if (md) classes.push(`col-md-${md}`);\r\n  if (lg) classes.push(`col-lg-${lg}`);\r\n  if (xl) classes.push(`col-xl-${xl}`);\r\n  return classes.join(' ');\r\n};\r\n\r\n// Row Component\r\nconst Row = ({ children, className }) => {\r\n  return <div className={`row ${className}`}>{children}</div>;\r\n};\r\n\r\n// Col Component\r\nconst Col = ({ children, xs, sm, md, lg, xl, className }) => {\r\n  const sizeClasses = getSizeClasses({ xs, sm, md, lg, xl });\r\n  return <div className={`${sizeClasses} ${className}`}>{children}</div>;\r\n};\r\n\r\n// PropTypes for type checking\r\nRow.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCol.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  xs: PropTypes.number,\r\n  sm: PropTypes.number,\r\n  md: PropTypes.number,\r\n  lg: PropTypes.number,\r\n  xl: PropTypes.number,\r\n  className: PropTypes.string,\r\n};\r\n\r\n// Default props\r\nRow.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nCol.defaultProps = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 12,\r\n  lg: 12,\r\n  xl: 12,\r\n  className: '',\r\n};\r\n\r\nexport { Row, Col };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Heading.css';\r\n\r\nconst Heading = ({ level, children, className }) => {\r\n  const Tag = `h${level}`;\r\n\r\n  return <Tag className={className}>{children}</Tag>;\r\n};\r\n\r\nHeading.propTypes = {\r\n  level: PropTypes.oneOf([1, 2, 3, 4, 5, 6]).isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nHeading.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default Heading;\r\n","import React, {forwardRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './RadioButton.css';\r\n\r\nconst RadioButton = forwardRef(\r\n    ({ name, label, value, onChange, disabled, className, isValid, options, errorMessage, validationRules }, ref) => {\r\n  return(<div className='radio-sec'>\r\n    <label>{label}\r\n    {validationRules?.required?.value && <span aria-hidden=\"true\" className=\"text-input-required\">*</span>}\r\n    </label>\r\n    {options.map((option) => (\r\n      <div className={`radio-button ${className}`}>\r\n      <input\r\n        type=\"radio\"\r\n        id={`${name}-${option.value}`}\r\n        name={name}\r\n        value={option.value}\r\n        checked={option.value === value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        ref={ref}\r\n        aria-checked={option.value === value}\r\n        aria-disabled={disabled}\r\n        className=\"radio-input\"\r\n      />\r\n      <label htmlFor={`${name}-${option.value}`} className=\"radio-label\">\r\n        {option.label}\r\n      </label>\r\n      \r\n    </div>\r\n    ))}\r\n    {!isValid && <span className=\"error-message\">{errorMessage}</span>}\r\n  </div>\r\n  )\r\n  }\r\n);\r\n\r\nRadioButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired, // Function to call when the radio button is changed\r\n  checked: PropTypes.bool, \r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      value: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  disabled: PropTypes.bool,\r\n  required: PropTypes.bool,\r\n};\r\n\r\n\r\nRadioButton.defaultProps = {\r\n    checked: false,\r\n    disabled: false,\r\n    className: '',\r\n  };\r\n\r\nexport default RadioButton;\r\n","// SelectInput.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SelectInput.css';\r\nimport { getRequest } from 'sdk-library';\r\n\r\nconst SelectInput = React.forwardRef(\r\n  ({ id, name, label, options, value, onChange, disabled, isValid, required, className, errorMessage, validationRules, optionsAPI, dependentOn }, ref) => {\r\n    const [optionsData, setOptionsData] = useState(options);\r\n    useEffect(() => {\r\n      if (optionsAPI && !dependentOn ) {\r\n        getOPtions();\r\n      }\r\n    }, [optionsAPI])\r\n\r\n    useEffect(()=>{\r\n      // if(name=='state') {\r\n        console.log('optionsData', optionsData);\r\n        setOptionsData(options);\r\n      // }\r\n    },[options])\r\n\r\n    const getOPtions = async() => {\r\n      try {\r\n        await getRequest(optionsAPI)\r\n         .then(resp => {\r\n          console.log('res', resp);\r\n           setOptionsData(resp);\r\n         })\r\n     } catch (error) {\r\n       console.log(\"Sorry! We are not serving in the zipcode that you entered\")\r\n     }\r\n    }\r\n\r\n    return (\r\n      <div className={`select-input ${className}`}>\r\n        <label htmlFor={id} className={`select-label ${required ? 'required' : ''}`}>\r\n          {label}\r\n          {validationRules?.required?.value && <span aria-hidden=\"true\" className=\"text-input-required\">*</span>}\r\n        </label>\r\n        <select\r\n          id={id}\r\n          name={name}\r\n          ref={ref}\r\n          value={value}\r\n          onChange={onChange}\r\n          disabled={disabled}\r\n          aria-required={validationRules?.required?.value}\r\n          aria-invalid={!isValid}\r\n          className={`select-box ${isValid ? '' : 'has-error'}`}\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select an option\r\n          </option>\r\n          {optionsData?.data?\r\n          optionsData?.data?.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          )):optionsData.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))\r\n        }\r\n        </select>\r\n        {!isValid && <span className=\"error-message\">{errorMessage}</span>}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nSelectInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n  required: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  errorMessage: PropTypes.string,\r\n};\r\n\r\nSelectInput.defaultProps = {\r\n  disabled: false,\r\n  required: false,\r\n  className: '',\r\n  errorMessage: '',\r\n};\r\n\r\nexport default SelectInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Text.css';\r\n\r\nconst Text = ({ variant, size, weight, color, children, className }) => {\r\n  const classNames = [\r\n    'text',\r\n    `text-${variant}`,\r\n    `text-${size}`,\r\n    `text-${weight}`,\r\n    `text-${color}`,\r\n    className\r\n  ].join(' ');\r\n\r\n  return <p className={classNames}>{children}</p>;\r\n};\r\n\r\nText.propTypes = {\r\n  variant: PropTypes.oneOf(['body', 'caption', 'overline']),\r\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n  weight: PropTypes.oneOf(['light', 'normal', 'bold']),\r\n  color: PropTypes.oneOf(['primary', 'secondary', 'tertiary']),\r\n  children: PropTypes.node.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nText.defaultProps = {\r\n  variant: 'body',\r\n  size: 'medium',\r\n  weight: 'normal',\r\n  color: 'primary',\r\n  className: '',\r\n};\r\n\r\nexport default Text;\r\n","\r\nimport React, { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TextInput.css';\r\n\r\nconst TextInput = forwardRef(\r\n  ({ id, label, type, value, onChange, placeholder, disabled, validationRules, maxLength, errorMessage, isValid, className = '', ...props}, ref) => {\r\n    return (\r\n      <div className={`text-input-wrapper ${className}` }>\r\n        {label && (\r\n          <label htmlFor={id} className=\"text-input-label\">\r\n            {label}\r\n            {validationRules?.required?.value && <span aria-hidden=\"true\" className=\"text-input-required\">*</span>}\r\n            \r\n          </label>\r\n        )}\r\n        <input\r\n          id={id}\r\n          type={type}\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder={placeholder}\r\n          disabled={disabled}\r\n          required={validationRules?.required?.value}\r\n          maxLength={maxLength}\r\n          aria-invalid={isValid ? 'false' : 'true'}\r\n          aria-required={validationRules?.required?.value}\r\n          aria-describedby={isValid ? undefined : `${id}-error`}\r\n          ref={ref}\r\n          autoComplete=\"off\"\r\n          className={`text-input-field ${isValid ? '': 'text-input-error'}`}\r\n          {...props}\r\n        />\r\n        {!isValid && <span className=\"text-input-error-message\">{errorMessage}</span>}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nTextInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  type: PropTypes.oneOf(['text', 'password', 'email', 'number']),\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  required: PropTypes.bool,\r\n  maxLength: PropTypes.number,\r\n  errorMessage: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  type: 'text',\r\n  placeholder: '',\r\n  disabled: false,\r\n  required: false,\r\n  maxLength: 255,\r\n  errorMessage: '',\r\n};\r\n\r\nexport default TextInput;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst ApiNinjasTable = ({ data, visibleRows, handleLoadMore }) => {\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Make</th>\r\n            <th>Model</th>\r\n            <th>Year</th>\r\n            <th>Class</th>\r\n            <th>Fuel Type</th>\r\n            <th>City MPG</th>\r\n            <th>Highway MPG</th>\r\n            <th>Transmission</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.slice(0, visibleRows).map((item, index) => (\r\n            <tr key={index}>\r\n              <td>{item.make || 'N/A'}</td>\r\n              <td>{item.model || 'N/A'}</td>\r\n              <td>{item.year || 'N/A'}</td>\r\n              <td>{item.class || 'N/A'}</td>\r\n              <td>{item.fuel_type || 'N/A'}</td>\r\n              <td>{item.city_mpg || 'N/A'}</td>\r\n              <td>{item.highway_mpg || 'N/A'}</td>\r\n              <td>{item.transmission || 'N/A'}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {visibleRows < data.length && (\r\n        <button className=\"load-more-button\" onClick={handleLoadMore}>\r\n          Load More\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApiNinjasTable;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ApiNinjasTable from './ApiNinjas'; // Import the new component\r\nimport './table.css';\r\n\r\nconst Table = ({ apiUrl, headers }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [visibleRows, setVisibleRows] = useState(10); // Number of rows to display initially\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(apiUrl, { headers });\r\n      setData(response.data.Results || response.data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (apiUrl) fetchData();\r\n  }, [apiUrl, headers]);\r\n\r\n  const handleLoadMore = () => {\r\n    setVisibleRows((prev) => prev + 10); // Show 10 more rows\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : apiUrl.includes('api-ninjas') ? (\r\n        <ApiNinjasTable data={data} visibleRows={visibleRows} handleLoadMore={handleLoadMore} />\r\n      ) : (\r\n        <>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                {apiUrl.includes('getAllManufacturers') && <th>Manufacturer</th>}\r\n                {apiUrl.includes('getMakesForVehicle') && <th>Vehicle Type Name</th>}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.slice(0, visibleRows).map((item, index) => (\r\n                <tr key={item.Make_ID || item.Mfr_ID || index}>\r\n                  <td>{item.Make_ID || item.Mfr_ID || item.MakeId || item.Id}</td>\r\n                  <td>{item.Make_Name || item.Mfr_CommonName || item.MakeName || item.Name}</td>\r\n                  {apiUrl.includes('getAllManufacturers') && <td>{item.Mfr_Name || 'N/A'}</td>}\r\n                  {apiUrl.includes('getMakesForVehicle') && <td>{item.VehicleTypeName || 'N/A'}</td>}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          {visibleRows < data.length && (\r\n            <button className=\"load-more-button\" onClick={handleLoadMore}>\r\n              Load More\r\n            </button>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;","import React, { useState } from 'react';\r\nimport Table from './Table'; // Import the Table component\r\nimport './APITABS.css'; // Add CSS for layout and styling\r\n\r\nconst APITabs = () => {\r\n  const [activeTab, setActiveTab] = useState('nhtsa'); // Default tab\r\n  const [selectedAPI, setSelectedAPI] = useState(null); // Selected API from the sidebar\r\n  const [headers, setHeaders] = useState({}); // Headers for API calls\r\n\r\n  // Define tabs and their respective APIs\r\n  const tabs = {\r\n    nhtsa: [\r\n      { name: 'Get All Makes', url: 'https://blooming-retreat-61297-cbf936552597.herokuapp.com/api/getAllMakes' },\r\n      { name: 'Get Makes for Manufacturer', url: 'https://blooming-retreat-61297-cbf936552597.herokuapp.com/api/getAllManufacturers' },\r\n      { name: 'Get Makes for Vehicle', url: 'https://blooming-retreat-61297-cbf936552597.herokuapp.com/api/getMakesForVehicle' },\r\n      { name: 'Get WMIs For Manufacturer', url: 'https://blooming-retreat-61297-cbf936552597.herokuapp.com/api/getWMIsForManufacturer/hon' },\r\n    ],\r\n    apiNinjas: [\r\n      { name: 'Get Cars by Model (Camry)', url: 'https://api.api-ninjas.com/v1/cars?model=camry' },\r\n    ],\r\n    carMax: [], // Placeholder for carMax\r\n    Kbb: [], // Placeholder for Kbb\r\n    FIpe: [], // Placeholder for FIpe\r\n    OEM: [], // Placeholder for OEM\r\n  };\r\n\r\n  const handleApiSelection = (api) => {\r\n    setSelectedAPI(api.url);\r\n    if (activeTab === 'apiNinjas') {\r\n      setHeaders({\r\n        'X-Api-Key': '/8Hkrnu0MLUnL97HFbe5dA==2EE54zkctqFiolxO',\r\n      });\r\n    } else {\r\n      setHeaders({});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"api-tabs\">\r\n      <div className=\"api-tabs-container\">\r\n        {/* Tabs */}\r\n        <div className=\"tabs\">\r\n          {Object.keys(tabs).map((tab) => (\r\n            <button\r\n              key={tab}\r\n              className={`tab-button ${activeTab === tab ? 'active' : ''}`}\r\n              onClick={() => {\r\n                setActiveTab(tab);\r\n                setSelectedAPI(null); // Reset selected API when switching tabs\r\n                setHeaders({});\r\n              }}\r\n            >\r\n              {tab.toUpperCase()}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          {/* Sidebar */}\r\n          <div className=\"sidebar-container\">\r\n            {tabs[activeTab].length > 0 ? (\r\n              <ul>\r\n                {tabs[activeTab].map((api, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className={`api-button ${selectedAPI === api.url ? 'selected' : ''}`}\r\n                    onClick={() => handleApiSelection(api)}\r\n                  >\r\n                    {api.name}\r\n                  </button>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p className=\"placeholder-sidebar\">No APIs available for this tab.</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Content Area */}\r\n          <div className=\"content-area\">\r\n            {tabs[activeTab].length > 0 ? (\r\n              selectedAPI ? (\r\n                <Table apiUrl={selectedAPI} headers={headers} />\r\n              ) : (\r\n                <p>Select an API from the sidebar to view its data.</p>\r\n              )\r\n            ) : (\r\n              <p className=\"placeholder\">This tab is under development. Please check back later.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default APITabs;","import React, { useEffect, useState } from 'react';\r\nimport { validateFormFieldsNewMethod } from 'custom-claims';\r\nimport { getRequest,validateFormFields } from 'sdk-library';\r\n\r\nimport _ from 'lodash';\r\nimport { TextInput, Select, Button, Heading, Text, CheckBox, Card, RadioButton, Alert, Row, Col, Table, ApiTabs } from '../common';\r\n\r\n\r\nconst DynamicWizrd = ({ getPreviousWidget, getNextWidget, workFlowData, activeWidget,resp,getInitialWidget }) => {\r\n    const [widgetFields, setWidgetFields] = useState();\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(undefined);\r\n    const [quoteData,setQuoteData] = useState(resp)\r\n    let formData = {}\r\n    console.log(\".............resp..........\",resp)\r\n  \r\n    useEffect(()=>{\r\n        console.log('widgetFields', widgetFields);\r\n    },[widgetFields])\r\n    useEffect(() => {\r\n        if (workFlowData[activeWidget.name]) {\r\n            setWidgetFields(workFlowData[activeWidget.name].widgetData)\r\n        } else {\r\n            getWidgetFields();\r\n        } \r\n    }, [activeWidget, workFlowData,resp])\r\n\r\n    const getWidgetFields = async () => {\r\n        console.log(\".......activeWidget.endpoint.................\",activeWidget.endpoint)\r\n        if(activeWidget.name!==\"Quote\"){\r\n        const result = await getRequest(activeWidget.endpoint);\r\n        console.log(\"................result......\",result)\r\n        setWidgetFields(result);\r\n        setIsLoaded(true)\r\n        }\r\n        else{\r\n            setWidgetFields(resp);\r\n            setIsLoaded(true)\r\n        }\r\n    };\r\n\r\n    const handleChange = async(name, value) => {\r\n        setWidgetFields((prevData) => ({\r\n            ...prevData,\r\n            fields: prevData.fields.map((field, fIndex) =>\r\n                field.name === name\r\n                    ? {\r\n                        ...field,\r\n                        value: value\r\n                    }\r\n                    : field\r\n            ),\r\n        }));\r\n\r\n        const childField = widgetFields.fields.find(f => f.dependentOn === name);\r\n        if (childField) {\r\n            const params = {[name]: value}\r\n            const url = replaceRouteParams(childField.optionsAPI, params);\r\n            const childOptions = await getRequest(url);\r\n            const updatedFormWithChild = widgetFields.fields.map(field => {\r\n                if (field.name === childField.name) {\r\n                    return { ...field, options: childOptions };\r\n                }\r\n                return field;\r\n            });\r\n            console.log('childField', childOptions, childField);\r\n            setWidgetFields((prevData) => ({\r\n                ...prevData,\r\n                fields: prevData.fields.map((field, fIndex) =>\r\n                    field.name == childField.name\r\n                        ? {\r\n                            ...field,\r\n                            options: childOptions\r\n                        }\r\n                        : field\r\n                ),\r\n            }));\r\n        }\r\n    };\r\n\r\n    const renderFields = (fields) => {\r\n        console.log(fields)\r\n        return fields?.flatMap((field) => {\r\n            const renderedField = (\r\n                <Col xl={field.width} ><InputField key={field.name} field={field} onChange={handleChange} /></Col>\r\n            );\r\n            if (field.options) {\r\n                const selectedOption = field.options.find(option => option.value === field.value);\r\n                if (selectedOption && selectedOption.childQuestion) {\r\n                    const childField = (\r\n                        <Col xl={field.width} ><InputField key={selectedOption.childQuestion.name} field={selectedOption.childQuestion} onChange={handleChange} /></Col>\r\n                    );\r\n                    return [renderedField, childField];\r\n                    // { renderFields(selectedOption.childQuestion) }\r\n                }\r\n            }\r\n            return renderedField;\r\n        });\r\n    };\r\n\r\n    const renderStep = (stepInfo) => {\r\n        console.log(\"------------------------->\",stepInfo)\r\n        return <>\r\n            <section className='step-info'>\r\n                <Row>\r\n                    <Col>\r\n                        {/* <Heading level={4}>{stepInfo.title}</Heading>\r\n                        <Text weight='bold' color=\"primary\">{stepInfo.subTitle}</Text> */}\r\n                    </Col>\r\n                </Row>\r\n            </section>\r\n            <Row>\r\n                {renderFields(stepInfo.fields)}\r\n            </Row>\r\n            <Row>\r\n                {renderButtons(stepInfo.buttons)}\r\n            </Row>\r\n        </>\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        alert('Cancel Button clicked');\r\n    }\r\n\r\n    const handleBack = async () => {\r\n        // Get Previous step\r\n        getPreviousWidget({ widgetData: widgetFields });\r\n    }\r\n\r\n    const replaceRouteParams = (urlTemplate, params) => {\r\n        return urlTemplate.replace(/:([a-zA-Z]+)/g, (_, key) => {\r\n            return params[key] || `:${key}`;\r\n        });\r\n    }\r\n\r\n    const getKeyValuePairs = (field) => {\r\n        const obj = {};\r\n        field.map(field => {\r\n            Object.assign(obj, { [field.name]: field.value })\r\n        });\r\n        return obj;\r\n    }\r\n    const handleNext = async () => {\r\n        const validationReport = validateFormFields(widgetFields.fields);\r\n        if (!validationReport.status) {\r\n            setWidgetFields((prevData) => ({\r\n                ...prevData,\r\n                fields: validationReport.data\r\n            }));\r\n        }\r\n        \r\n\r\n        let externalValidationPassed = true;\r\n        if (widgetFields.externalValidation && validationReport.status) {\r\n            externalValidationPassed = false;\r\n            const params = getKeyValuePairs(widgetFields.fields);\r\n            const url = replaceRouteParams(widgetFields.externalValidation.endpoint, params);\r\n            console.log(\".........................................\",url)\r\n\r\n            try {\r\n                const result = await getRequest(url);\r\n                if (result?.status) {\r\n                    externalValidationPassed = true;\r\n                    setErrorMsg(undefined)\r\n                } else {\r\n                    setErrorMsg(result?.errorMsg)\r\n                }\r\n            } catch (error) {\r\n                setErrorMsg(\"Sorry! We are not serving in the zipcode that you entered\")\r\n            }\r\n        }\r\n\r\n        if (validationReport.status && externalValidationPassed) {\r\n            getNextWidget({ widgetData: widgetFields });\r\n        }\r\n    }\r\n    const getHome = ()=>{\r\n        getInitialWidget()\r\n    }\r\n    const eventHandlers = {\r\n        handleBack,\r\n        handleCancel,\r\n        handleNext,\r\n        getHome,\r\n\r\n    };\r\n\r\n    const renderButtons = (buttons) => {\r\n        return <>\r\n            <Col>\r\n                {buttons?.map((button, index) => {\r\n                    return <Button\r\n                        label={button.label}\r\n                        onClick={eventHandlers[button.onClickHandler]}\r\n                        className={button.className}\r\n                        color={button.color}\r\n                        variant={button.variant}\r\n                     />\r\n                })}\r\n\r\n            </Col>\r\n        </>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='step-form'>\r\n                {!!errorMsg && <Alert type='error' message={errorMsg} />}\r\n                {isLoaded &&\r\n                    renderStep(widgetFields)}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst InputField = ({ field, onChange }) => {\r\n    const [value, setValue] = useState(field.value || '');\r\n\r\n    useEffect(() => {\r\n        setValue(field.value);\r\n    }, [field.value]);\r\n\r\n    const handleChange = (e) => {\r\n        const newValue = e.target.value;\r\n        setValue(newValue);\r\n        onChange(field.name, newValue);\r\n    };\r\n\r\n    // console.log('field', field);\r\n    switch (field.component) {\r\n        case 'TextInput':\r\n            return <TextInput {...field} value={value} onChange={handleChange} />;\r\n        case 'Select':\r\n            return <Select {...field} value={value} onChange={handleChange} />;\r\n        case 'Radio':\r\n            return <RadioButton {...field} value={value} onChange={handleChange} />;\r\n        case 'Card':\r\n            return <Card {...field} />;\r\n        case 'Table':\r\n            return <ApiTabs {...field} onChange = {handleChange} />;\r\n        default:\r\n            return <TextInput {...field} value={value} onChange={handleChange} />;\r\n    }\r\n};\r\n\r\nexport default DynamicWizrd;","import React, { useState, useEffect } from 'react';\r\nimport { json, useParams } from 'react-router-dom';\r\nimport DynamicWizrd from '../widgets/DynamicWizrd';\r\nimport {updateQuoteModel, getRequest,mapFormData,postRequest, quoteApi} from 'sdk-library';\r\nimport { Card } from 'common';\r\nimport axios from 'axios';\r\n \r\nexport default function ProductContainer() {\r\n    const params = useParams()\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [activeWidget, setActiveWidget] = useState();\r\n    const [workFlowData, setWorkFlowData] = useState({});\r\n    const [productWorkFlow, setProductWorkFlow] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [ formData ,setFormData]=useState({})\r\n    const [resp,setResp] = useState({})\r\n \r\n \r\n    useEffect(() => {\r\n        getInitialWidget();\r\n    }, []);\r\n \r\n    const getInitialWidget = async () => {\r\n        const result = await getRequest(`/${params.product}`);\r\n        setActiveWidget(result[0]);\r\n        setProductWorkFlow(result);\r\n        setIsLoaded(true)\r\n    }\r\n    const getQuoteData = async (data,currentWidgetData) =>{\r\n        data=JSON.stringify(data)\r\n        const result =  await postRequest(currentWidgetData.endpoint,data);\r\n       setActiveWidget(productWorkFlow[activeStep + 1])\r\n     updateQuoteModel(result)\r\n     await new Promise((resolve)=>setTimeout(resolve,500))\r\n        const getResponse =  await  axios.get(quoteApi.endpoint)\r\n        setTimeout(()=>{setResp(getResponse.data.item)\r\n       },) \r\n    }\r\n    const getNextWidget = (widgetData) => {\r\n            console.log(widgetData)\r\n            const currentPageData = widgetData?.widgetData?.fields\r\n            console.log(currentPageData)\r\n            const currentPageMappedData = mapFormData(currentPageData)\r\n            setFormData((formData)=>{\r\n               return{ ...formData,...currentPageMappedData}\r\n            })\r\n       \r\n \r\n        setActiveStep(activeStep + 1);\r\n        if(activeStep < productWorkFlow.length-2){\r\n        setActiveWidget(productWorkFlow[activeStep + 1])\r\n        }\r\n        else{\r\n            getQuoteData(formData,productWorkFlow[activeStep + 1])\r\n            setActiveStep(0)\r\n \r\n        }\r\n         \r\n        setWorkFlowData({\r\n            ...workFlowData,\r\n            [activeWidget.name]: widgetData\r\n        });\r\n    }\r\n \r\n    const getPreviousWidget = (widgetData) => {\r\n        setActiveWidget(productWorkFlow[activeStep - 1])\r\n        setActiveStep(activeStep - 1);\r\n        setWorkFlowData({\r\n            ...workFlowData,\r\n            [activeWidget.name]: widgetData\r\n        });\r\n \r\n    }\r\n \r\n    const renderWidget = (widget) => {\r\n        return <DynamicWizrd\r\n            getPreviousWidget={getPreviousWidget}\r\n            getNextWidget={getNextWidget}\r\n            workFlowData={workFlowData}\r\n            activeWidget={widget}\r\n            getInitialWidget={getInitialWidget}\r\n            resp={resp}\r\n        />\r\n    }\r\n    return (\r\n        <div className='product-form'>\r\n            {isLoaded && renderWidget(activeWidget)}\r\n        </div>\r\n    )\r\n}"],"names":["axiosInstance","axios","create","baseURL","timeout","headers","interceptors","response","use","data","error","status","console","Promise","reject","getRequest","async","endpoint","params","arguments","length","undefined","get","postRequest","log","post","validationRulesMethod","required","label","value","errorMessage","valid","isEmpty","minLength","maxLength","regexPattern","pattern","RegExp","test","min","max","minDate","Date","maxDate","isValidPattern","isAlphabetNoSpace","isAlphabetNumericNoSpace","isAlphabetSpace","isAlphabetNumericSpace","isvalidMobileNumber","isvalidOtpNumber","isNumeric","isDecimal","isValidDate","isValidGeoLocation","isValidEmail","isValidUrl","isValidPassword","isValidUUIDFormat","isValidSpecialChars","isValidDescription","isValidZipCode","_","isNaN","getTime","location","String","toLowerCase","textval","stripTags","trim","quoteApi","mapFormData","fieldsArray","dataObj","forEach","field","name","updateQuoteModel","transformedResult","Object","keys","result","reduce","acc","key","newKey","replace","str","toUpperCase","transformKey","component","currentData","item","fields","patch","err","_ref","type","message","onClose","useEffect","window","scrollTo","_jsxs","className","children","_jsx","onClick","Button","disabled","color","variant","size","fullWidth","shape","as","href","defaultProps","Card","ref","props","quoteData","entries","map","_ref2","filteredData","filter","index","CheckboxGroup","_validationRules$requ","options","selectedValues","onChange","validationRules","handleCheckboxChange","event","target","isChecked","checked","selected","option","id","includes","htmlFor","Row","Col","_ref3","xs","sm","md","lg","xl","sizeClasses","classes","push","join","getSizeClasses","Heading","level","Tag","RadioButton","forwardRef","isValid","SelectInput","React","_validationRules$requ2","_optionsData$data","optionsAPI","dependentOn","optionsData","setOptionsData","useState","getOPtions","then","resp","Text","weight","classNames","TextInput","_validationRules$requ3","placeholder","autoComplete","visibleRows","handleLoadMore","slice","make","model","year","class","fuel_type","city_mpg","highway_mpg","transmission","apiUrl","setData","loading","setLoading","setVisibleRows","Results","fetchData","prev","ApiNinjasTable","_Fragment","Make_ID","Mfr_ID","MakeId","Id","Make_Name","Mfr_CommonName","MakeName","Name","Mfr_Name","VehicleTypeName","APITabs","activeTab","setActiveTab","selectedAPI","setSelectedAPI","setHeaders","tabs","nhtsa","url","apiNinjas","carMax","Kbb","FIpe","OEM","tab","api","handleApiSelection","Table","InputField","setValue","handleChange","e","newValue","Select","ApiTabs","getPreviousWidget","getNextWidget","workFlowData","activeWidget","getInitialWidget","widgetFields","setWidgetFields","isLoaded","setIsLoaded","errorMsg","setErrorMsg","setQuoteData","widgetData","getWidgetFields","prevData","fIndex","childField","find","f","replaceRouteParams","childOptions","urlTemplate","eventHandlers","handleBack","handleCancel","alert","handleNext","validationReport","fieldsObject","responseData","validatedFields","validationStatus","_item$validationRules","_item$validationRules2","rule","assign","validateFormFields","externalValidationPassed","externalValidation","obj","getKeyValuePairs","getHome","renderButtons","buttons","button","onClickHandler","Alert","stepInfo","flatMap","renderedField","width","selectedOption","childQuestion","renderStep","ProductContainer","useParams","activeStep","setActiveStep","setActiveWidget","setWorkFlowData","productWorkFlow","setProductWorkFlow","formData","setFormData","setResp","product","_widgetData$widgetDat","currentPageData","currentPageMappedData","currentWidgetData","JSON","stringify","resolve","setTimeout","getResponse","getQuoteData","widget","DynamicWizrd"],"sourceRoot":""}